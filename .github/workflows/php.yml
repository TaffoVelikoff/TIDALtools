name: PHP Composer

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  version:
    name: 'PHP version test'
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        php: [ '7.4', '8.0' ]
        os: [ ubuntu-latest, windows-latest ]
        dependencies: [ lowest, highest ]

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP with Xdebug
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: xdebug
          extensions: curl

      - name: Determine composer cache directory on Linux
        if: matrix.os == 'ubuntu-latest'
        run: echo "::set-env name=COMPOSER_CACHE_DIR::$(composer config cache-dir)"

      - name: Determine composer cache directory on Windows
        if: matrix.os == 'windows-latest'
        run: ECHO "::set-env name=COMPOSER_CACHE_DIR::~\AppData\Local\Composer"

      - name: Cache dependencies installed with composer
        uses: actions/cache@v2
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            php${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-

      - name: Install lowest dependencies with composer
        if: matrix.dependencies == 'lowest'
        run: composer update --no-ansi --no-interaction --no-progress --prefer-lowest

      - name: Install highest dependencies with composer
        if: matrix.dependencies == 'highest'
        run: composer update --no-ansi --no-interaction --no-progress

      - name: Install APT packages
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install flac atomicparsley ffmpeg

      - name: Install Choco packages
        if: matrix.os == 'windows-latest'
        run: choco -r -y install ffmpeg atomicparsley flac

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Get sample data
        run: |
          mkdir tests/sample_data
          wget -O tests/sample_data/test.flac http://techslides.com/demos/samples/sample.flac

      - name: Run tests
        run: vendor/bin/phpunit

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
